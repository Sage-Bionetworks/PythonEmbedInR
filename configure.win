#!/bin/sh

set -e # exit immediately if any step fails

RWITHPYTHON_PYTHON_VERSION=3.6
RWITHPYTHON_PYTHON_VERSION_EXTENDED=${RWITHPYTHON_PYTHON_VERSION}.8
VERSION_FILE_SUFFIX=`echo $RWITHPYTHON_PYTHON_VERSION | sed 's/\.//g'`

install_python() {
  arch=$1
  if [ $arch = "x64" ]
  then
    EMBEDDED_ZIP=https://www.python.org/ftp/python/${RWITHPYTHON_PYTHON_VERSION_EXTENDED}/python-${RWITHPYTHON_PYTHON_VERSION_EXTENDED}-embed-amd64.zip
  else
    EMBEDDED_ZIP=https://www.python.org/ftp/python/${RWITHPYTHON_PYTHON_VERSION_EXTENDED}/python-${RWITHPYTHON_PYTHON_VERSION_EXTENDED}-embed-win32.zip
  fi
  # This creates a folder /pythonLibs$arch in the installed package.
  # Note:  You can't create /libs which is reserved for the R package installer
  PYTHON_LIB_PATH=inst/pythonLibs$arch
  mkdir -p ${PYTHON_LIB_PATH}
  cd ${PYTHON_LIB_PATH}
  curl -o python-${RWITHPYTHON_PYTHON_VERSION_EXTENDED}-embed.zip $EMBEDDED_ZIP
  if [ "$?" -ne "0" ]; then
    echo "Failed to download $EMBEDDED_ZIP"
    exit 1
  fi

  unzip python-${RWITHPYTHON_PYTHON_VERSION_EXTENDED}-embed.zip

  # per https://bugs.python.org/issue24960 we unzip the file inst/pythonLibs/python35.zip into a folder of the same name
  # our current directory is inst/pythonLibs$arch
  PYTHON_ZIP_FILE_NAME=python${VERSION_FILE_SUFFIX}.zip
  TEMP_ZIP_FILE=temp-python${VERSION_FILE_SUFFIX}.zip
  mv ${PYTHON_ZIP_FILE_NAME} ${TEMP_ZIP_FILE}
  mkdir -p ${PYTHON_ZIP_FILE_NAME}
  mv ${TEMP_ZIP_FILE} ${PYTHON_ZIP_FILE_NAME}/
  cd ${PYTHON_ZIP_FILE_NAME}
  unzip ${TEMP_ZIP_FILE}
  cd ..

  # embedded python doesn't normally support pip and as of 3.6 won't even
  # check the site directory for a side loaded pip as below. we force it to check sites
  # to use the pip we install via get-pip.
  # https://stackoverflow.com/a/48906746
  PTH_FILE="./python${VERSION_FILE_SUFFIX}._pth"
  if [ -f "$PTH_FILE" ];
  then
      sed -i 's/#import site/import site/g' $PTH_FILE
  fi

  # install pip, match the version we install in the main configure script
  PIP_INSTALL_SCRIPT=get-pip.py
  curl -o $PIP_INSTALL_SCRIPT https://bootstrap.pypa.io/get-pip.py
  ./python.exe $PIP_INSTALL_SCRIPT pip==21.0.1
  cd ../..
}

install_python "x64"
install_python "i386"

# Now get the include files
# Note, we don't put them into 'inst' because they aren't needed in the installed package
PYTHON_ARCHIVE_NAME=Python-${RWITHPYTHON_PYTHON_VERSION_EXTENDED}
PYTHON_RUNTIME_BUNDLE=https://www.python.org/ftp/python/${RWITHPYTHON_PYTHON_VERSION_EXTENDED}/${PYTHON_ARCHIVE_NAME}.tgz

curl -o ${PYTHON_ARCHIVE_NAME}.tgz ${PYTHON_RUNTIME_BUNDLE}
if [ "$?" -ne "0" ]; then
  echo "Failed to download ${PYTHON_RUNTIME_BUNDLE}"
  exit 1
fi

tar -xzf ${PYTHON_ARCHIVE_NAME}.tgz
rm ${PYTHON_ARCHIVE_NAME}.tgz


PYTHON_SRC_PATH=${PYTHON_ARCHIVE_NAME}

# Confirmed that compilation is done under the 'src' directory, so ".." is needed before any
# relative paths established during this script.  
echo 'PKG_CFLAGS=-I"'../${PYTHON_SRC_PATH}/Include'" -I"'../${PYTHON_SRC_PATH}/PC'"' > src/Makevars.win

echo 'ifeq "$(WIN)" "64"' >> src/Makevars.win
echo 'PKG_LIBS=-L"'../inst/pythonLibsx64'" -lpython'${VERSION_FILE_SUFFIX}  >> src/Makevars.win
echo 'else' >> src/Makevars.win
echo 'PKG_LIBS=-L"'../inst/pythonLibsi386'" -lpython'${VERSION_FILE_SUFFIX}  >> src/Makevars.win
echo 'endif' >> src/Makevars.win

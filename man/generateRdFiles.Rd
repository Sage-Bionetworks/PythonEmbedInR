% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PythonPkgWrapperUtils.R
\name{generateRdFiles}
\alias{generateRdFiles}
\title{Generate .Rd files for Python classes and functions}
\usage{
generateRdFiles(srcRootDir, pyPkg, module, modifyFunctions = NULL,
  modifyClasses = NULL, functionPrefix = NULL, keepContent = FALSE,
  templateDir = NULL)
}
\arguments{
\item{srcRootDir}{The directory of the R package}

\item{pyPkg}{The Python package name}

\item{module}{The Python module}

\item{modifyFunctions}{Optional function to modify the returned functions}

\item{modifyClasses}{Optional function to modify the returned classes}

\item{functionPrefix}{Optional text to add to the name of the functions}

\item{keepContent}{Optional wheather the existing files at the target directory
should be kept}

\item{templateDir}{Optional path to a template directory}
}
\description{
This function generate .Rd files for Python classes and functions
  for a given Python module.
}
\details{
* `generateRdFiles` and `generateRWrappers` should be called with similar
  params to ensure all R wrappers has sufficient documentation.
  
* `module` can have the same value as `pyPkg` or a module within the Python package.
  The value that is passed to `module` parameter must be a fully qualified name.
  
* `modifyFunctions` and `modifyClasses` are optional function defined by the caller.

* `modifyFunctions` takes an object with the schema: ('name', 'args', 'doc', 'module')
  and modifies the list of functions found under `module`. See example 2.
  
* `modifyClasses` takes an object with the schema: ('name', 'constructorArgs', 'doc', 'methods')
  and modifies the list of classes found under `module`. See example 3.
}
\note{
The generated .Rd files is localed in srcRootDir/auto-man. One must copy
 all .Rd files to their man folder and make sure that the language being used in
 these documents are friendly to R users.
}
\examples{
1.
```
.onLoad <- function(libname, pkgname) {
  PythonEmbedInR::generateRdFiles(
    srcRootDir = "path/to/R/pkg",
    pyPkg = "pyPackageName",
    module = "aModuleInPyPackageName")
}
```
2.
```
myModifyFunctions <- function(x) {
  if (any(x$name == "myFun")) NULL else x
}
.onLoad <- function(libname, pkgname) {
  PythonEmbedInR::generateRdFiles(
    srcRootDir = "path/to/R/pkg",
    pyPkg = "pyPackageName",
    module = "aModuleInPyPackageName",
    modifyFunctions = myModifyFunctions)
}
```
3.
```
myModifyClasses <- function(x) {
  if (any(x$name == "MyObj")) NULL else x
}
.onLoad <- function(libname, pkgname) {
  PythonEmbedInR::generateRdFiles(
    srcRootDir = "path/to/R/pkg",
    pyPkg = "pyPackageName",
    module = "aModuleInPyPackageName",
    modifyClasses = myModifyClasses)
}
```
}

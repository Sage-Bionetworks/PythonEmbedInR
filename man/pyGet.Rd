% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/GetPythonObjects.R
\name{pyGet}
\alias{pyGet}
\title{gets Python objects by name and transforms them into R objects}
\usage{
pyGet(key, simplify = TRUE)
}
\arguments{
\item{key}{a string specifying the name of a Python object.}

\item{simplify}{an optional logical value, if TRUE R converts Python lists
into R vectors whenever possible, else it translates Python lists
always into R lists.}
}
\value{
Returns the specified Python object converted into an R object if
        possible, else a warning is issued and the string representation
        of the object is returned.
}
\description{
The function pyGet gets Python objects by name and transforms
             them into R objects.
}
\details{
Since any Python object can be transformed into one of the basic
         data types it is up to the user to do so up front. More information
         about the type conversion can be found in the README file or at
         \url{http://pythoninr.bitbucket.org/}.
}
\examples{
\dontshow{PythonInR:::pyCranConnect()}
pyGet("__name__")
pyGet("sys.path")
pyExec("
from datetime import date
today = date.today()
")
pyExecp("today")
pyPrint("today")
pyGet("today")
}

